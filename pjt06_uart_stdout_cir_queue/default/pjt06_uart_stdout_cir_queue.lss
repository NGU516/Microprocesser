
pjt06_uart_stdout_cir_queue.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000034  00800200  00000996  00000a2a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000996  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000004c  00800234  00800234  00000a5e  2**0
                  ALLOC
  3 .stab         00000c9c  00000000  00000000  00000a60  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000001b6  00000000  00000000  000016fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000001a0  00000000  00000000  000018b8  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001327  00000000  00000000  00001a58  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008c1  00000000  00000000  00002d7f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c0a  00000000  00000000  00003640  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002d8  00000000  00000000  0000424c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003a6  00000000  00000000  00004524  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a3a  00000000  00000000  000048ca  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  00005304  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
   4:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
   8:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
   c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  10:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  14:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  18:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  1c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  20:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  24:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  28:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  2c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  30:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  34:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  38:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  3c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  40:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  44:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  48:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  4c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  50:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  54:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  58:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  5c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  60:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  64:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  68:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  6c:	0c 94 63 01 	jmp	0x2c6	; 0x2c6 <__vector_27>
  70:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  74:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  78:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  7c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  80:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  84:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  88:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  8c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  90:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  94:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  98:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  9c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  a0:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  a4:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  a8:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  ac:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  b0:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  b4:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  b8:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  bc:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  c0:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  c4:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  c8:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  cc:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  d0:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  d4:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  d8:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  dc:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  e0:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e6 e9       	ldi	r30, 0x96	; 150
  fc:	f9 e0       	ldi	r31, 0x09	; 9
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a4 33       	cpi	r26, 0x34	; 52
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>
 10e:	1b be       	out	0x3b, r1	; 59

00000110 <__do_clear_bss>:
 110:	12 e0       	ldi	r17, 0x02	; 2
 112:	a4 e3       	ldi	r26, 0x34	; 52
 114:	b2 e0       	ldi	r27, 0x02	; 2
 116:	01 c0       	rjmp	.+2      	; 0x11a <.do_clear_bss_start>

00000118 <.do_clear_bss_loop>:
 118:	1d 92       	st	X+, r1

0000011a <.do_clear_bss_start>:
 11a:	a0 38       	cpi	r26, 0x80	; 128
 11c:	b1 07       	cpc	r27, r17
 11e:	e1 f7       	brne	.-8      	; 0x118 <.do_clear_bss_loop>
 120:	0e 94 da 01 	call	0x3b4	; 0x3b4 <main>
 124:	0c 94 c9 04 	jmp	0x992	; 0x992 <_exit>

00000128 <__bad_interrupt>:
 128:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012c <led_init>:
#include "led.h"

static uint8_t Leds;

void led_init(void) {
	DDRL = PORTL = 0xff;
 12c:	8f ef       	ldi	r24, 0xFF	; 255
 12e:	80 93 0b 01 	sts	0x010B, r24
 132:	80 93 0a 01 	sts	0x010A, r24
}
 136:	08 95       	ret

00000138 <led_on_all>:

void led_on_all(void) {
	Leds = PORTL = 0x00;
 138:	10 92 0b 01 	sts	0x010B, r1
 13c:	10 92 34 02 	sts	0x0234, r1
}
 140:	08 95       	ret

00000142 <led_off_all>:

void led_off_all(void) {
	Leds = PORTL = 0xff;
 142:	8f ef       	ldi	r24, 0xFF	; 255
 144:	80 93 0b 01 	sts	0x010B, r24
 148:	80 93 34 02 	sts	0x0234, r24
}
 14c:	08 95       	ret

0000014e <led_on>:

void led_on(uint8_t led_no) {
	Leds &= ~(1 << led_no);
 14e:	21 e0       	ldi	r18, 0x01	; 1
 150:	30 e0       	ldi	r19, 0x00	; 0
 152:	02 c0       	rjmp	.+4      	; 0x158 <led_on+0xa>
 154:	22 0f       	add	r18, r18
 156:	33 1f       	adc	r19, r19
 158:	8a 95       	dec	r24
 15a:	e2 f7       	brpl	.-8      	; 0x154 <led_on+0x6>
 15c:	20 95       	com	r18
 15e:	80 91 34 02 	lds	r24, 0x0234
 162:	28 23       	and	r18, r24
 164:	20 93 34 02 	sts	0x0234, r18
	PORTL = Leds;
 168:	20 93 0b 01 	sts	0x010B, r18
}
 16c:	08 95       	ret

0000016e <led_off>:

void led_off(uint8_t led_no) {
	Leds |= (1 << led_no);
 16e:	21 e0       	ldi	r18, 0x01	; 1
 170:	30 e0       	ldi	r19, 0x00	; 0
 172:	02 c0       	rjmp	.+4      	; 0x178 <led_off+0xa>
 174:	22 0f       	add	r18, r18
 176:	33 1f       	adc	r19, r19
 178:	8a 95       	dec	r24
 17a:	e2 f7       	brpl	.-8      	; 0x174 <led_off+0x6>
 17c:	80 91 34 02 	lds	r24, 0x0234
 180:	82 2b       	or	r24, r18
 182:	80 93 34 02 	sts	0x0234, r24
	PORTL = Leds;
 186:	80 93 0b 01 	sts	0x010B, r24
}
 18a:	08 95       	ret

0000018c <led_set>:

void led_set(uint8_t led_mask) {
	Leds = ~led_mask;
 18c:	80 95       	com	r24
 18e:	80 93 34 02 	sts	0x0234, r24
	PORTL = Leds;
 192:	80 93 0b 01 	sts	0x010B, r24
}
 196:	08 95       	ret

00000198 <is_prime>:
// app.c
#include <stdio.h>

int is_prime(int n) {
 198:	cf 93       	push	r28
 19a:	df 93       	push	r29
 19c:	fc 01       	movw	r30, r24
	int i;
	for(i = 2; i <= n/2; i++) 
 19e:	62 e0       	ldi	r22, 0x02	; 2
 1a0:	70 e0       	ldi	r23, 0x00	; 0
 1a2:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <__divmodhi4>
 1a6:	eb 01       	movw	r28, r22
 1a8:	22 e0       	ldi	r18, 0x02	; 2
 1aa:	30 e0       	ldi	r19, 0x00	; 0
 1ac:	08 c0       	rjmp	.+16     	; 0x1be <is_prime+0x26>
		if((n % i) == 0) 
 1ae:	cf 01       	movw	r24, r30
 1b0:	b9 01       	movw	r22, r18
 1b2:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <__divmodhi4>
 1b6:	00 97       	sbiw	r24, 0x00	; 0
 1b8:	41 f0       	breq	.+16     	; 0x1ca <is_prime+0x32>
// app.c
#include <stdio.h>

int is_prime(int n) {
	int i;
	for(i = 2; i <= n/2; i++) 
 1ba:	2f 5f       	subi	r18, 0xFF	; 255
 1bc:	3f 4f       	sbci	r19, 0xFF	; 255
 1be:	c2 17       	cp	r28, r18
 1c0:	d3 07       	cpc	r29, r19
 1c2:	ac f7       	brge	.-22     	; 0x1ae <is_prime+0x16>
		if((n % i) == 0) 
			return(0);
	return(1);
 1c4:	81 e0       	ldi	r24, 0x01	; 1
 1c6:	90 e0       	ldi	r25, 0x00	; 0
 1c8:	02 c0       	rjmp	.+4      	; 0x1ce <is_prime+0x36>

int is_prime(int n) {
	int i;
	for(i = 2; i <= n/2; i++) 
		if((n % i) == 0) 
			return(0);
 1ca:	80 e0       	ldi	r24, 0x00	; 0
 1cc:	90 e0       	ldi	r25, 0x00	; 0
	return(1);
}
 1ce:	df 91       	pop	r29
 1d0:	cf 91       	pop	r28
 1d2:	08 95       	ret

000001d4 <app_prime>:

void app_prime(int t) 
{
 1d4:	cf 92       	push	r12
 1d6:	df 92       	push	r13
 1d8:	ef 92       	push	r14
 1da:	ff 92       	push	r15
 1dc:	0f 93       	push	r16
 1de:	1f 93       	push	r17
 1e0:	cf 93       	push	r28
 1e2:	df 93       	push	r29
 1e4:	7c 01       	movw	r14, r24
	int n, count = 0;
 1e6:	00 e0       	ldi	r16, 0x00	; 0
 1e8:	10 e0       	ldi	r17, 0x00	; 0
	for(n = 2; n <= t; n++) {
 1ea:	c2 e0       	ldi	r28, 0x02	; 2
 1ec:	d0 e0       	ldi	r29, 0x00	; 0
		if(is_prime(n)) {
			count++;
			printf("%d is a prime, number !!!\n", n);
 1ee:	20 e0       	ldi	r18, 0x00	; 0
 1f0:	c2 2e       	mov	r12, r18
 1f2:	22 e0       	ldi	r18, 0x02	; 2
 1f4:	d2 2e       	mov	r13, r18
}

void app_prime(int t) 
{
	int n, count = 0;
	for(n = 2; n <= t; n++) {
 1f6:	16 c0       	rjmp	.+44     	; 0x224 <app_prime+0x50>
		if(is_prime(n)) {
 1f8:	ce 01       	movw	r24, r28
 1fa:	0e 94 cc 00 	call	0x198	; 0x198 <is_prime>
 1fe:	00 97       	sbiw	r24, 0x00	; 0
 200:	81 f0       	breq	.+32     	; 0x222 <app_prime+0x4e>
			count++;
 202:	0f 5f       	subi	r16, 0xFF	; 255
 204:	1f 4f       	sbci	r17, 0xFF	; 255
			printf("%d is a prime, number !!!\n", n);
 206:	00 d0       	rcall	.+0      	; 0x208 <app_prime+0x34>
 208:	0f 92       	push	r0
 20a:	ed b7       	in	r30, 0x3d	; 61
 20c:	fe b7       	in	r31, 0x3e	; 62
 20e:	d2 82       	std	Z+2, r13	; 0x02
 210:	c1 82       	std	Z+1, r12	; 0x01
 212:	d4 83       	std	Z+4, r29	; 0x04
 214:	c3 83       	std	Z+3, r28	; 0x03
 216:	0e 94 10 02 	call	0x420	; 0x420 <printf>
 21a:	0f 90       	pop	r0
 21c:	0f 90       	pop	r0
 21e:	0f 90       	pop	r0
 220:	0f 90       	pop	r0
}

void app_prime(int t) 
{
	int n, count = 0;
	for(n = 2; n <= t; n++) {
 222:	21 96       	adiw	r28, 0x01	; 1
 224:	ec 16       	cp	r14, r28
 226:	fd 06       	cpc	r15, r29
 228:	3c f7       	brge	.-50     	; 0x1f8 <app_prime+0x24>
		if(is_prime(n)) {
			count++;
			printf("%d is a prime, number !!!\n", n);
		}
	}
	printf("count=%d\n", count);
 22a:	00 d0       	rcall	.+0      	; 0x22c <app_prime+0x58>
 22c:	0f 92       	push	r0
 22e:	8b e1       	ldi	r24, 0x1B	; 27
 230:	92 e0       	ldi	r25, 0x02	; 2
 232:	ed b7       	in	r30, 0x3d	; 61
 234:	fe b7       	in	r31, 0x3e	; 62
 236:	92 83       	std	Z+2, r25	; 0x02
 238:	81 83       	std	Z+1, r24	; 0x01
 23a:	14 83       	std	Z+4, r17	; 0x04
 23c:	03 83       	std	Z+3, r16	; 0x03
 23e:	0e 94 10 02 	call	0x420	; 0x420 <printf>
 242:	0f 90       	pop	r0
 244:	0f 90       	pop	r0
 246:	0f 90       	pop	r0
 248:	0f 90       	pop	r0
}
 24a:	df 91       	pop	r29
 24c:	cf 91       	pop	r28
 24e:	1f 91       	pop	r17
 250:	0f 91       	pop	r16
 252:	ff 90       	pop	r15
 254:	ef 90       	pop	r14
 256:	df 90       	pop	r13
 258:	cf 90       	pop	r12
 25a:	08 95       	ret

0000025c <uart_putchar>:
	sbi(UCSR0B, TXEN0);				// TX enable
	sbi(UCSR0B, TXCIE0);
}

int uart_putchar(char ch, FILE *stream)
{
 25c:	cf 93       	push	r28
 25e:	c8 2f       	mov	r28, r24
	if (ch == '\n')
 260:	8a 30       	cpi	r24, 0x0A	; 10
 262:	19 f4       	brne	.+6      	; 0x26a <uart_putchar+0xe>
		uart_putchar('\r', stream);
 264:	8d e0       	ldi	r24, 0x0D	; 13
 266:	0e 94 2e 01 	call	0x25c	; 0x25c <uart_putchar>

	cli();	// clear interrupt flag
 26a:	f8 94       	cli

	if (!uart_busy) {
 26c:	80 91 35 02 	lds	r24, 0x0235
 270:	88 23       	and	r24, r24
 272:	59 f4       	brne	.+22     	; 0x28a <uart_putchar+0x2e>
		UDR0 = ch;
 274:	c0 93 c6 00 	sts	0x00C6, r28
		uart_busy = 1;
 278:	81 e0       	ldi	r24, 0x01	; 1
 27a:	80 93 35 02 	sts	0x0235, r24
 27e:	0a c0       	rjmp	.+20     	; 0x294 <uart_putchar+0x38>
	}
	else {
		while(q_insert(ch) == 0) {
			cli();
 280:	f8 94       	cli
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 282:	86 ef       	ldi	r24, 0xF6	; 246
 284:	8a 95       	dec	r24
 286:	f1 f7       	brne	.-4      	; 0x284 <uart_putchar+0x28>
			_delay_us(100);
			sei();
 288:	78 94       	sei
	if (!uart_busy) {
		UDR0 = ch;
		uart_busy = 1;
	}
	else {
		while(q_insert(ch) == 0) {
 28a:	8c 2f       	mov	r24, r28
 28c:	0e 94 9b 01 	call	0x336	; 0x336 <q_insert>
 290:	00 97       	sbiw	r24, 0x00	; 0
 292:	b1 f3       	breq	.-20     	; 0x280 <uart_putchar+0x24>
			cli();
			_delay_us(100);
			sei();
		}
	}
	sei();	// set interrupt flag
 294:	78 94       	sei

	return 1;
}
 296:	81 e0       	ldi	r24, 0x01	; 1
 298:	90 e0       	ldi	r25, 0x00	; 0
 29a:	cf 91       	pop	r28
 29c:	08 95       	ret

0000029e <uart_init>:
FILE Mystdout = FDEV_SETUP_STREAM (uart_putchar, NULL, _FDEV_SETUP_WRITE);
char uart_busy;

void uart_init()
{
	stdout = &Mystdout;
 29e:	85 e2       	ldi	r24, 0x25	; 37
 2a0:	92 e0       	ldi	r25, 0x02	; 2
 2a2:	90 93 7d 02 	sts	0x027D, r25
 2a6:	80 93 7c 02 	sts	0x027C, r24
	UBRR0H = 0x00; UBRR0L = 0x03;	// 115.2Kbps
 2aa:	10 92 c5 00 	sts	0x00C5, r1
 2ae:	83 e0       	ldi	r24, 0x03	; 3
 2b0:	80 93 c4 00 	sts	0x00C4, r24
	sbi(UCSR0B, TXEN0);				// TX enable
 2b4:	e1 ec       	ldi	r30, 0xC1	; 193
 2b6:	f0 e0       	ldi	r31, 0x00	; 0
 2b8:	80 81       	ld	r24, Z
 2ba:	88 60       	ori	r24, 0x08	; 8
 2bc:	80 83       	st	Z, r24
	sbi(UCSR0B, TXCIE0);
 2be:	80 81       	ld	r24, Z
 2c0:	80 64       	ori	r24, 0x40	; 64
 2c2:	80 83       	st	Z, r24
}
 2c4:	08 95       	ret

000002c6 <__vector_27>:
	return 1;
}

////////////////////////////////////////////
ISR(USART0_TX_vect)
{
 2c6:	1f 92       	push	r1
 2c8:	0f 92       	push	r0
 2ca:	0f b6       	in	r0, 0x3f	; 63
 2cc:	0f 92       	push	r0
 2ce:	0b b6       	in	r0, 0x3b	; 59
 2d0:	0f 92       	push	r0
 2d2:	11 24       	eor	r1, r1
 2d4:	2f 93       	push	r18
 2d6:	3f 93       	push	r19
 2d8:	4f 93       	push	r20
 2da:	5f 93       	push	r21
 2dc:	6f 93       	push	r22
 2de:	7f 93       	push	r23
 2e0:	8f 93       	push	r24
 2e2:	9f 93       	push	r25
 2e4:	af 93       	push	r26
 2e6:	bf 93       	push	r27
 2e8:	ef 93       	push	r30
 2ea:	ff 93       	push	r31
	char ch;

	if ((ch = q_delete()) == 0)
 2ec:	0e 94 bd 01 	call	0x37a	; 0x37a <q_delete>
 2f0:	88 23       	and	r24, r24
 2f2:	19 f4       	brne	.+6      	; 0x2fa <__vector_27+0x34>
		uart_busy = 0;
 2f4:	10 92 35 02 	sts	0x0235, r1
 2f8:	02 c0       	rjmp	.+4      	; 0x2fe <__vector_27+0x38>
	else
		UDR0 = ch;
 2fa:	80 93 c6 00 	sts	0x00C6, r24
}
 2fe:	ff 91       	pop	r31
 300:	ef 91       	pop	r30
 302:	bf 91       	pop	r27
 304:	af 91       	pop	r26
 306:	9f 91       	pop	r25
 308:	8f 91       	pop	r24
 30a:	7f 91       	pop	r23
 30c:	6f 91       	pop	r22
 30e:	5f 91       	pop	r21
 310:	4f 91       	pop	r20
 312:	3f 91       	pop	r19
 314:	2f 91       	pop	r18
 316:	0f 90       	pop	r0
 318:	0b be       	out	0x3b, r0	; 59
 31a:	0f 90       	pop	r0
 31c:	0f be       	out	0x3f, r0	; 63
 31e:	0f 90       	pop	r0
 320:	1f 90       	pop	r1
 322:	18 95       	reti

00000324 <q_init>:
char q[Q_SIZE];
int f, r;

void q_init()
{
	f = r = 0;
 324:	10 92 39 02 	sts	0x0239, r1
 328:	10 92 38 02 	sts	0x0238, r1
 32c:	10 92 37 02 	sts	0x0237, r1
 330:	10 92 36 02 	sts	0x0236, r1
}
 334:	08 95       	ret

00000336 <q_insert>:

int q_insert(char ch)
{
 336:	48 2f       	mov	r20, r24
	if ((r + 1) % Q_SIZE == f)
 338:	20 91 38 02 	lds	r18, 0x0238
 33c:	30 91 39 02 	lds	r19, 0x0239
 340:	2f 5f       	subi	r18, 0xFF	; 255
 342:	3f 4f       	sbci	r19, 0xFF	; 255
 344:	c9 01       	movw	r24, r18
 346:	60 e4       	ldi	r22, 0x40	; 64
 348:	70 e0       	ldi	r23, 0x00	; 0
 34a:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <__divmodhi4>
 34e:	9c 01       	movw	r18, r24
 350:	80 91 36 02 	lds	r24, 0x0236
 354:	90 91 37 02 	lds	r25, 0x0237
 358:	28 17       	cp	r18, r24
 35a:	39 07       	cpc	r19, r25
 35c:	59 f0       	breq	.+22     	; 0x374 <q_insert+0x3e>
		return 0;	// full
	r = (r + 1) % Q_SIZE;	// pointer position set
 35e:	30 93 39 02 	sts	0x0239, r19
 362:	20 93 38 02 	sts	0x0238, r18
	q[r] = ch;
 366:	26 5c       	subi	r18, 0xC6	; 198
 368:	3d 4f       	sbci	r19, 0xFD	; 253
 36a:	f9 01       	movw	r30, r18
 36c:	40 83       	st	Z, r20
	return 1;
 36e:	81 e0       	ldi	r24, 0x01	; 1
 370:	90 e0       	ldi	r25, 0x00	; 0
 372:	08 95       	ret
}

int q_insert(char ch)
{
	if ((r + 1) % Q_SIZE == f)
		return 0;	// full
 374:	80 e0       	ldi	r24, 0x00	; 0
 376:	90 e0       	ldi	r25, 0x00	; 0
	r = (r + 1) % Q_SIZE;	// pointer position set
	q[r] = ch;
	return 1;
}
 378:	08 95       	ret

0000037a <q_delete>:

int q_delete()
{
	if (r == f)
 37a:	80 91 36 02 	lds	r24, 0x0236
 37e:	90 91 37 02 	lds	r25, 0x0237
 382:	20 91 38 02 	lds	r18, 0x0238
 386:	30 91 39 02 	lds	r19, 0x0239
 38a:	28 17       	cp	r18, r24
 38c:	39 07       	cpc	r19, r25
 38e:	79 f0       	breq	.+30     	; 0x3ae <q_delete+0x34>
		return 0;
	f = (f + 1) % Q_SIZE;
 390:	01 96       	adiw	r24, 0x01	; 1
 392:	60 e4       	ldi	r22, 0x40	; 64
 394:	70 e0       	ldi	r23, 0x00	; 0
 396:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <__divmodhi4>
 39a:	90 93 37 02 	sts	0x0237, r25
 39e:	80 93 36 02 	sts	0x0236, r24
	return q[f];
 3a2:	86 5c       	subi	r24, 0xC6	; 198
 3a4:	9d 4f       	sbci	r25, 0xFD	; 253
 3a6:	fc 01       	movw	r30, r24
 3a8:	80 81       	ld	r24, Z
 3aa:	90 e0       	ldi	r25, 0x00	; 0
 3ac:	08 95       	ret
}

int q_delete()
{
	if (r == f)
		return 0;
 3ae:	80 e0       	ldi	r24, 0x00	; 0
 3b0:	90 e0       	ldi	r25, 0x00	; 0
	f = (f + 1) % Q_SIZE;
	return q[f];
}
 3b2:	08 95       	ret

000003b4 <main>:
#include "cir_queue.h"
#include "app.h"

int main()
{	
	led_init();
 3b4:	0e 94 96 00 	call	0x12c	; 0x12c <led_init>
	uart_init();
 3b8:	0e 94 4f 01 	call	0x29e	; 0x29e <uart_init>
	q_init();
 3bc:	0e 94 92 01 	call	0x324	; 0x324 <q_init>

	sei();
 3c0:	78 94       	sei
	led_on(1);
 3c2:	81 e0       	ldi	r24, 0x01	; 1
 3c4:	0e 94 a7 00 	call	0x14e	; 0x14e <led_on>
	app_prime(2000);
 3c8:	80 ed       	ldi	r24, 0xD0	; 208
 3ca:	97 e0       	ldi	r25, 0x07	; 7
 3cc:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <app_prime>
 3d0:	ff cf       	rjmp	.-2      	; 0x3d0 <main+0x1c>

000003d2 <__divmodhi4>:
 3d2:	97 fb       	bst	r25, 7
 3d4:	09 2e       	mov	r0, r25
 3d6:	07 26       	eor	r0, r23
 3d8:	0a d0       	rcall	.+20     	; 0x3ee <__divmodhi4_neg1>
 3da:	77 fd       	sbrc	r23, 7
 3dc:	04 d0       	rcall	.+8      	; 0x3e6 <__divmodhi4_neg2>
 3de:	0c d0       	rcall	.+24     	; 0x3f8 <__udivmodhi4>
 3e0:	06 d0       	rcall	.+12     	; 0x3ee <__divmodhi4_neg1>
 3e2:	00 20       	and	r0, r0
 3e4:	1a f4       	brpl	.+6      	; 0x3ec <__divmodhi4_exit>

000003e6 <__divmodhi4_neg2>:
 3e6:	70 95       	com	r23
 3e8:	61 95       	neg	r22
 3ea:	7f 4f       	sbci	r23, 0xFF	; 255

000003ec <__divmodhi4_exit>:
 3ec:	08 95       	ret

000003ee <__divmodhi4_neg1>:
 3ee:	f6 f7       	brtc	.-4      	; 0x3ec <__divmodhi4_exit>
 3f0:	90 95       	com	r25
 3f2:	81 95       	neg	r24
 3f4:	9f 4f       	sbci	r25, 0xFF	; 255
 3f6:	08 95       	ret

000003f8 <__udivmodhi4>:
 3f8:	aa 1b       	sub	r26, r26
 3fa:	bb 1b       	sub	r27, r27
 3fc:	51 e1       	ldi	r21, 0x11	; 17
 3fe:	07 c0       	rjmp	.+14     	; 0x40e <__udivmodhi4_ep>

00000400 <__udivmodhi4_loop>:
 400:	aa 1f       	adc	r26, r26
 402:	bb 1f       	adc	r27, r27
 404:	a6 17       	cp	r26, r22
 406:	b7 07       	cpc	r27, r23
 408:	10 f0       	brcs	.+4      	; 0x40e <__udivmodhi4_ep>
 40a:	a6 1b       	sub	r26, r22
 40c:	b7 0b       	sbc	r27, r23

0000040e <__udivmodhi4_ep>:
 40e:	88 1f       	adc	r24, r24
 410:	99 1f       	adc	r25, r25
 412:	5a 95       	dec	r21
 414:	a9 f7       	brne	.-22     	; 0x400 <__udivmodhi4_loop>
 416:	80 95       	com	r24
 418:	90 95       	com	r25
 41a:	bc 01       	movw	r22, r24
 41c:	cd 01       	movw	r24, r26
 41e:	08 95       	ret

00000420 <printf>:
 420:	cf 93       	push	r28
 422:	df 93       	push	r29
 424:	cd b7       	in	r28, 0x3d	; 61
 426:	de b7       	in	r29, 0x3e	; 62
 428:	fe 01       	movw	r30, r28
 42a:	36 96       	adiw	r30, 0x06	; 6
 42c:	61 91       	ld	r22, Z+
 42e:	71 91       	ld	r23, Z+
 430:	80 91 7c 02 	lds	r24, 0x027C
 434:	90 91 7d 02 	lds	r25, 0x027D
 438:	af 01       	movw	r20, r30
 43a:	0e 94 22 02 	call	0x444	; 0x444 <vfprintf>
 43e:	df 91       	pop	r29
 440:	cf 91       	pop	r28
 442:	08 95       	ret

00000444 <vfprintf>:
 444:	2f 92       	push	r2
 446:	3f 92       	push	r3
 448:	4f 92       	push	r4
 44a:	5f 92       	push	r5
 44c:	6f 92       	push	r6
 44e:	7f 92       	push	r7
 450:	8f 92       	push	r8
 452:	9f 92       	push	r9
 454:	af 92       	push	r10
 456:	bf 92       	push	r11
 458:	cf 92       	push	r12
 45a:	df 92       	push	r13
 45c:	ef 92       	push	r14
 45e:	ff 92       	push	r15
 460:	0f 93       	push	r16
 462:	1f 93       	push	r17
 464:	cf 93       	push	r28
 466:	df 93       	push	r29
 468:	cd b7       	in	r28, 0x3d	; 61
 46a:	de b7       	in	r29, 0x3e	; 62
 46c:	2d 97       	sbiw	r28, 0x0d	; 13
 46e:	0f b6       	in	r0, 0x3f	; 63
 470:	f8 94       	cli
 472:	de bf       	out	0x3e, r29	; 62
 474:	0f be       	out	0x3f, r0	; 63
 476:	cd bf       	out	0x3d, r28	; 61
 478:	3c 01       	movw	r6, r24
 47a:	7d 87       	std	Y+13, r23	; 0x0d
 47c:	6c 87       	std	Y+12, r22	; 0x0c
 47e:	5a 01       	movw	r10, r20
 480:	fc 01       	movw	r30, r24
 482:	17 82       	std	Z+7, r1	; 0x07
 484:	16 82       	std	Z+6, r1	; 0x06
 486:	83 81       	ldd	r24, Z+3	; 0x03
 488:	81 ff       	sbrs	r24, 1
 48a:	c8 c1       	rjmp	.+912    	; 0x81c <vfprintf+0x3d8>
 48c:	2e 01       	movw	r4, r28
 48e:	08 94       	sec
 490:	41 1c       	adc	r4, r1
 492:	51 1c       	adc	r5, r1
 494:	f3 01       	movw	r30, r6
 496:	93 81       	ldd	r25, Z+3	; 0x03
 498:	ec 85       	ldd	r30, Y+12	; 0x0c
 49a:	fd 85       	ldd	r31, Y+13	; 0x0d
 49c:	93 fd       	sbrc	r25, 3
 49e:	85 91       	lpm	r24, Z+
 4a0:	93 ff       	sbrs	r25, 3
 4a2:	81 91       	ld	r24, Z+
 4a4:	fd 87       	std	Y+13, r31	; 0x0d
 4a6:	ec 87       	std	Y+12, r30	; 0x0c
 4a8:	88 23       	and	r24, r24
 4aa:	09 f4       	brne	.+2      	; 0x4ae <vfprintf+0x6a>
 4ac:	b3 c1       	rjmp	.+870    	; 0x814 <vfprintf+0x3d0>
 4ae:	85 32       	cpi	r24, 0x25	; 37
 4b0:	41 f4       	brne	.+16     	; 0x4c2 <vfprintf+0x7e>
 4b2:	93 fd       	sbrc	r25, 3
 4b4:	85 91       	lpm	r24, Z+
 4b6:	93 ff       	sbrs	r25, 3
 4b8:	81 91       	ld	r24, Z+
 4ba:	fd 87       	std	Y+13, r31	; 0x0d
 4bc:	ec 87       	std	Y+12, r30	; 0x0c
 4be:	85 32       	cpi	r24, 0x25	; 37
 4c0:	29 f4       	brne	.+10     	; 0x4cc <vfprintf+0x88>
 4c2:	90 e0       	ldi	r25, 0x00	; 0
 4c4:	b3 01       	movw	r22, r6
 4c6:	0e 94 3f 04 	call	0x87e	; 0x87e <fputc>
 4ca:	e4 cf       	rjmp	.-56     	; 0x494 <vfprintf+0x50>
 4cc:	ff 24       	eor	r15, r15
 4ce:	ee 24       	eor	r14, r14
 4d0:	10 e0       	ldi	r17, 0x00	; 0
 4d2:	10 32       	cpi	r17, 0x20	; 32
 4d4:	b0 f4       	brcc	.+44     	; 0x502 <vfprintf+0xbe>
 4d6:	8b 32       	cpi	r24, 0x2B	; 43
 4d8:	69 f0       	breq	.+26     	; 0x4f4 <vfprintf+0xb0>
 4da:	8c 32       	cpi	r24, 0x2C	; 44
 4dc:	28 f4       	brcc	.+10     	; 0x4e8 <vfprintf+0xa4>
 4de:	80 32       	cpi	r24, 0x20	; 32
 4e0:	51 f0       	breq	.+20     	; 0x4f6 <vfprintf+0xb2>
 4e2:	83 32       	cpi	r24, 0x23	; 35
 4e4:	71 f4       	brne	.+28     	; 0x502 <vfprintf+0xbe>
 4e6:	0b c0       	rjmp	.+22     	; 0x4fe <vfprintf+0xba>
 4e8:	8d 32       	cpi	r24, 0x2D	; 45
 4ea:	39 f0       	breq	.+14     	; 0x4fa <vfprintf+0xb6>
 4ec:	80 33       	cpi	r24, 0x30	; 48
 4ee:	49 f4       	brne	.+18     	; 0x502 <vfprintf+0xbe>
 4f0:	11 60       	ori	r17, 0x01	; 1
 4f2:	2c c0       	rjmp	.+88     	; 0x54c <vfprintf+0x108>
 4f4:	12 60       	ori	r17, 0x02	; 2
 4f6:	14 60       	ori	r17, 0x04	; 4
 4f8:	29 c0       	rjmp	.+82     	; 0x54c <vfprintf+0x108>
 4fa:	18 60       	ori	r17, 0x08	; 8
 4fc:	27 c0       	rjmp	.+78     	; 0x54c <vfprintf+0x108>
 4fe:	10 61       	ori	r17, 0x10	; 16
 500:	25 c0       	rjmp	.+74     	; 0x54c <vfprintf+0x108>
 502:	17 fd       	sbrc	r17, 7
 504:	2e c0       	rjmp	.+92     	; 0x562 <vfprintf+0x11e>
 506:	28 2f       	mov	r18, r24
 508:	20 53       	subi	r18, 0x30	; 48
 50a:	2a 30       	cpi	r18, 0x0A	; 10
 50c:	98 f4       	brcc	.+38     	; 0x534 <vfprintf+0xf0>
 50e:	16 ff       	sbrs	r17, 6
 510:	08 c0       	rjmp	.+16     	; 0x522 <vfprintf+0xde>
 512:	8f 2d       	mov	r24, r15
 514:	88 0f       	add	r24, r24
 516:	f8 2e       	mov	r15, r24
 518:	ff 0c       	add	r15, r15
 51a:	ff 0c       	add	r15, r15
 51c:	f8 0e       	add	r15, r24
 51e:	f2 0e       	add	r15, r18
 520:	15 c0       	rjmp	.+42     	; 0x54c <vfprintf+0x108>
 522:	8e 2d       	mov	r24, r14
 524:	88 0f       	add	r24, r24
 526:	e8 2e       	mov	r14, r24
 528:	ee 0c       	add	r14, r14
 52a:	ee 0c       	add	r14, r14
 52c:	e8 0e       	add	r14, r24
 52e:	e2 0e       	add	r14, r18
 530:	10 62       	ori	r17, 0x20	; 32
 532:	0c c0       	rjmp	.+24     	; 0x54c <vfprintf+0x108>
 534:	8e 32       	cpi	r24, 0x2E	; 46
 536:	21 f4       	brne	.+8      	; 0x540 <vfprintf+0xfc>
 538:	16 fd       	sbrc	r17, 6
 53a:	6c c1       	rjmp	.+728    	; 0x814 <vfprintf+0x3d0>
 53c:	10 64       	ori	r17, 0x40	; 64
 53e:	06 c0       	rjmp	.+12     	; 0x54c <vfprintf+0x108>
 540:	8c 36       	cpi	r24, 0x6C	; 108
 542:	11 f4       	brne	.+4      	; 0x548 <vfprintf+0x104>
 544:	10 68       	ori	r17, 0x80	; 128
 546:	02 c0       	rjmp	.+4      	; 0x54c <vfprintf+0x108>
 548:	88 36       	cpi	r24, 0x68	; 104
 54a:	59 f4       	brne	.+22     	; 0x562 <vfprintf+0x11e>
 54c:	ec 85       	ldd	r30, Y+12	; 0x0c
 54e:	fd 85       	ldd	r31, Y+13	; 0x0d
 550:	93 fd       	sbrc	r25, 3
 552:	85 91       	lpm	r24, Z+
 554:	93 ff       	sbrs	r25, 3
 556:	81 91       	ld	r24, Z+
 558:	fd 87       	std	Y+13, r31	; 0x0d
 55a:	ec 87       	std	Y+12, r30	; 0x0c
 55c:	88 23       	and	r24, r24
 55e:	09 f0       	breq	.+2      	; 0x562 <vfprintf+0x11e>
 560:	b8 cf       	rjmp	.-144    	; 0x4d2 <vfprintf+0x8e>
 562:	98 2f       	mov	r25, r24
 564:	95 54       	subi	r25, 0x45	; 69
 566:	93 30       	cpi	r25, 0x03	; 3
 568:	18 f0       	brcs	.+6      	; 0x570 <vfprintf+0x12c>
 56a:	90 52       	subi	r25, 0x20	; 32
 56c:	93 30       	cpi	r25, 0x03	; 3
 56e:	38 f4       	brcc	.+14     	; 0x57e <vfprintf+0x13a>
 570:	24 e0       	ldi	r18, 0x04	; 4
 572:	30 e0       	ldi	r19, 0x00	; 0
 574:	a2 0e       	add	r10, r18
 576:	b3 1e       	adc	r11, r19
 578:	3f e3       	ldi	r19, 0x3F	; 63
 57a:	39 83       	std	Y+1, r19	; 0x01
 57c:	0f c0       	rjmp	.+30     	; 0x59c <vfprintf+0x158>
 57e:	83 36       	cpi	r24, 0x63	; 99
 580:	31 f0       	breq	.+12     	; 0x58e <vfprintf+0x14a>
 582:	83 37       	cpi	r24, 0x73	; 115
 584:	81 f0       	breq	.+32     	; 0x5a6 <vfprintf+0x162>
 586:	83 35       	cpi	r24, 0x53	; 83
 588:	09 f0       	breq	.+2      	; 0x58c <vfprintf+0x148>
 58a:	5a c0       	rjmp	.+180    	; 0x640 <vfprintf+0x1fc>
 58c:	22 c0       	rjmp	.+68     	; 0x5d2 <vfprintf+0x18e>
 58e:	f5 01       	movw	r30, r10
 590:	80 81       	ld	r24, Z
 592:	89 83       	std	Y+1, r24	; 0x01
 594:	22 e0       	ldi	r18, 0x02	; 2
 596:	30 e0       	ldi	r19, 0x00	; 0
 598:	a2 0e       	add	r10, r18
 59a:	b3 1e       	adc	r11, r19
 59c:	21 e0       	ldi	r18, 0x01	; 1
 59e:	c2 2e       	mov	r12, r18
 5a0:	d1 2c       	mov	r13, r1
 5a2:	42 01       	movw	r8, r4
 5a4:	14 c0       	rjmp	.+40     	; 0x5ce <vfprintf+0x18a>
 5a6:	92 e0       	ldi	r25, 0x02	; 2
 5a8:	29 2e       	mov	r2, r25
 5aa:	31 2c       	mov	r3, r1
 5ac:	2a 0c       	add	r2, r10
 5ae:	3b 1c       	adc	r3, r11
 5b0:	f5 01       	movw	r30, r10
 5b2:	80 80       	ld	r8, Z
 5b4:	91 80       	ldd	r9, Z+1	; 0x01
 5b6:	16 ff       	sbrs	r17, 6
 5b8:	03 c0       	rjmp	.+6      	; 0x5c0 <vfprintf+0x17c>
 5ba:	6f 2d       	mov	r22, r15
 5bc:	70 e0       	ldi	r23, 0x00	; 0
 5be:	02 c0       	rjmp	.+4      	; 0x5c4 <vfprintf+0x180>
 5c0:	6f ef       	ldi	r22, 0xFF	; 255
 5c2:	7f ef       	ldi	r23, 0xFF	; 255
 5c4:	c4 01       	movw	r24, r8
 5c6:	0e 94 34 04 	call	0x868	; 0x868 <strnlen>
 5ca:	6c 01       	movw	r12, r24
 5cc:	51 01       	movw	r10, r2
 5ce:	1f 77       	andi	r17, 0x7F	; 127
 5d0:	15 c0       	rjmp	.+42     	; 0x5fc <vfprintf+0x1b8>
 5d2:	82 e0       	ldi	r24, 0x02	; 2
 5d4:	28 2e       	mov	r2, r24
 5d6:	31 2c       	mov	r3, r1
 5d8:	2a 0c       	add	r2, r10
 5da:	3b 1c       	adc	r3, r11
 5dc:	f5 01       	movw	r30, r10
 5de:	80 80       	ld	r8, Z
 5e0:	91 80       	ldd	r9, Z+1	; 0x01
 5e2:	16 ff       	sbrs	r17, 6
 5e4:	03 c0       	rjmp	.+6      	; 0x5ec <vfprintf+0x1a8>
 5e6:	6f 2d       	mov	r22, r15
 5e8:	70 e0       	ldi	r23, 0x00	; 0
 5ea:	02 c0       	rjmp	.+4      	; 0x5f0 <vfprintf+0x1ac>
 5ec:	6f ef       	ldi	r22, 0xFF	; 255
 5ee:	7f ef       	ldi	r23, 0xFF	; 255
 5f0:	c4 01       	movw	r24, r8
 5f2:	0e 94 29 04 	call	0x852	; 0x852 <strnlen_P>
 5f6:	6c 01       	movw	r12, r24
 5f8:	10 68       	ori	r17, 0x80	; 128
 5fa:	51 01       	movw	r10, r2
 5fc:	13 fd       	sbrc	r17, 3
 5fe:	1c c0       	rjmp	.+56     	; 0x638 <vfprintf+0x1f4>
 600:	06 c0       	rjmp	.+12     	; 0x60e <vfprintf+0x1ca>
 602:	80 e2       	ldi	r24, 0x20	; 32
 604:	90 e0       	ldi	r25, 0x00	; 0
 606:	b3 01       	movw	r22, r6
 608:	0e 94 3f 04 	call	0x87e	; 0x87e <fputc>
 60c:	ea 94       	dec	r14
 60e:	8e 2d       	mov	r24, r14
 610:	90 e0       	ldi	r25, 0x00	; 0
 612:	c8 16       	cp	r12, r24
 614:	d9 06       	cpc	r13, r25
 616:	a8 f3       	brcs	.-22     	; 0x602 <vfprintf+0x1be>
 618:	0f c0       	rjmp	.+30     	; 0x638 <vfprintf+0x1f4>
 61a:	f4 01       	movw	r30, r8
 61c:	17 fd       	sbrc	r17, 7
 61e:	85 91       	lpm	r24, Z+
 620:	17 ff       	sbrs	r17, 7
 622:	81 91       	ld	r24, Z+
 624:	4f 01       	movw	r8, r30
 626:	90 e0       	ldi	r25, 0x00	; 0
 628:	b3 01       	movw	r22, r6
 62a:	0e 94 3f 04 	call	0x87e	; 0x87e <fputc>
 62e:	e1 10       	cpse	r14, r1
 630:	ea 94       	dec	r14
 632:	08 94       	sec
 634:	c1 08       	sbc	r12, r1
 636:	d1 08       	sbc	r13, r1
 638:	c1 14       	cp	r12, r1
 63a:	d1 04       	cpc	r13, r1
 63c:	71 f7       	brne	.-36     	; 0x61a <vfprintf+0x1d6>
 63e:	e7 c0       	rjmp	.+462    	; 0x80e <vfprintf+0x3ca>
 640:	84 36       	cpi	r24, 0x64	; 100
 642:	11 f0       	breq	.+4      	; 0x648 <vfprintf+0x204>
 644:	89 36       	cpi	r24, 0x69	; 105
 646:	51 f5       	brne	.+84     	; 0x69c <vfprintf+0x258>
 648:	f5 01       	movw	r30, r10
 64a:	17 ff       	sbrs	r17, 7
 64c:	07 c0       	rjmp	.+14     	; 0x65c <vfprintf+0x218>
 64e:	80 81       	ld	r24, Z
 650:	91 81       	ldd	r25, Z+1	; 0x01
 652:	a2 81       	ldd	r26, Z+2	; 0x02
 654:	b3 81       	ldd	r27, Z+3	; 0x03
 656:	24 e0       	ldi	r18, 0x04	; 4
 658:	30 e0       	ldi	r19, 0x00	; 0
 65a:	08 c0       	rjmp	.+16     	; 0x66c <vfprintf+0x228>
 65c:	80 81       	ld	r24, Z
 65e:	91 81       	ldd	r25, Z+1	; 0x01
 660:	aa 27       	eor	r26, r26
 662:	97 fd       	sbrc	r25, 7
 664:	a0 95       	com	r26
 666:	ba 2f       	mov	r27, r26
 668:	22 e0       	ldi	r18, 0x02	; 2
 66a:	30 e0       	ldi	r19, 0x00	; 0
 66c:	a2 0e       	add	r10, r18
 66e:	b3 1e       	adc	r11, r19
 670:	01 2f       	mov	r16, r17
 672:	0f 76       	andi	r16, 0x6F	; 111
 674:	b7 ff       	sbrs	r27, 7
 676:	08 c0       	rjmp	.+16     	; 0x688 <vfprintf+0x244>
 678:	b0 95       	com	r27
 67a:	a0 95       	com	r26
 67c:	90 95       	com	r25
 67e:	81 95       	neg	r24
 680:	9f 4f       	sbci	r25, 0xFF	; 255
 682:	af 4f       	sbci	r26, 0xFF	; 255
 684:	bf 4f       	sbci	r27, 0xFF	; 255
 686:	00 68       	ori	r16, 0x80	; 128
 688:	bc 01       	movw	r22, r24
 68a:	cd 01       	movw	r24, r26
 68c:	a2 01       	movw	r20, r4
 68e:	2a e0       	ldi	r18, 0x0A	; 10
 690:	30 e0       	ldi	r19, 0x00	; 0
 692:	0e 94 6b 04 	call	0x8d6	; 0x8d6 <__ultoa_invert>
 696:	d8 2e       	mov	r13, r24
 698:	d4 18       	sub	r13, r4
 69a:	3f c0       	rjmp	.+126    	; 0x71a <vfprintf+0x2d6>
 69c:	85 37       	cpi	r24, 0x75	; 117
 69e:	21 f4       	brne	.+8      	; 0x6a8 <vfprintf+0x264>
 6a0:	1f 7e       	andi	r17, 0xEF	; 239
 6a2:	2a e0       	ldi	r18, 0x0A	; 10
 6a4:	30 e0       	ldi	r19, 0x00	; 0
 6a6:	20 c0       	rjmp	.+64     	; 0x6e8 <vfprintf+0x2a4>
 6a8:	19 7f       	andi	r17, 0xF9	; 249
 6aa:	8f 36       	cpi	r24, 0x6F	; 111
 6ac:	a9 f0       	breq	.+42     	; 0x6d8 <vfprintf+0x294>
 6ae:	80 37       	cpi	r24, 0x70	; 112
 6b0:	20 f4       	brcc	.+8      	; 0x6ba <vfprintf+0x276>
 6b2:	88 35       	cpi	r24, 0x58	; 88
 6b4:	09 f0       	breq	.+2      	; 0x6b8 <vfprintf+0x274>
 6b6:	ae c0       	rjmp	.+348    	; 0x814 <vfprintf+0x3d0>
 6b8:	0b c0       	rjmp	.+22     	; 0x6d0 <vfprintf+0x28c>
 6ba:	80 37       	cpi	r24, 0x70	; 112
 6bc:	21 f0       	breq	.+8      	; 0x6c6 <vfprintf+0x282>
 6be:	88 37       	cpi	r24, 0x78	; 120
 6c0:	09 f0       	breq	.+2      	; 0x6c4 <vfprintf+0x280>
 6c2:	a8 c0       	rjmp	.+336    	; 0x814 <vfprintf+0x3d0>
 6c4:	01 c0       	rjmp	.+2      	; 0x6c8 <vfprintf+0x284>
 6c6:	10 61       	ori	r17, 0x10	; 16
 6c8:	14 ff       	sbrs	r17, 4
 6ca:	09 c0       	rjmp	.+18     	; 0x6de <vfprintf+0x29a>
 6cc:	14 60       	ori	r17, 0x04	; 4
 6ce:	07 c0       	rjmp	.+14     	; 0x6de <vfprintf+0x29a>
 6d0:	14 ff       	sbrs	r17, 4
 6d2:	08 c0       	rjmp	.+16     	; 0x6e4 <vfprintf+0x2a0>
 6d4:	16 60       	ori	r17, 0x06	; 6
 6d6:	06 c0       	rjmp	.+12     	; 0x6e4 <vfprintf+0x2a0>
 6d8:	28 e0       	ldi	r18, 0x08	; 8
 6da:	30 e0       	ldi	r19, 0x00	; 0
 6dc:	05 c0       	rjmp	.+10     	; 0x6e8 <vfprintf+0x2a4>
 6de:	20 e1       	ldi	r18, 0x10	; 16
 6e0:	30 e0       	ldi	r19, 0x00	; 0
 6e2:	02 c0       	rjmp	.+4      	; 0x6e8 <vfprintf+0x2a4>
 6e4:	20 e1       	ldi	r18, 0x10	; 16
 6e6:	32 e0       	ldi	r19, 0x02	; 2
 6e8:	f5 01       	movw	r30, r10
 6ea:	17 ff       	sbrs	r17, 7
 6ec:	07 c0       	rjmp	.+14     	; 0x6fc <vfprintf+0x2b8>
 6ee:	60 81       	ld	r22, Z
 6f0:	71 81       	ldd	r23, Z+1	; 0x01
 6f2:	82 81       	ldd	r24, Z+2	; 0x02
 6f4:	93 81       	ldd	r25, Z+3	; 0x03
 6f6:	44 e0       	ldi	r20, 0x04	; 4
 6f8:	50 e0       	ldi	r21, 0x00	; 0
 6fa:	06 c0       	rjmp	.+12     	; 0x708 <vfprintf+0x2c4>
 6fc:	60 81       	ld	r22, Z
 6fe:	71 81       	ldd	r23, Z+1	; 0x01
 700:	80 e0       	ldi	r24, 0x00	; 0
 702:	90 e0       	ldi	r25, 0x00	; 0
 704:	42 e0       	ldi	r20, 0x02	; 2
 706:	50 e0       	ldi	r21, 0x00	; 0
 708:	a4 0e       	add	r10, r20
 70a:	b5 1e       	adc	r11, r21
 70c:	a2 01       	movw	r20, r4
 70e:	0e 94 6b 04 	call	0x8d6	; 0x8d6 <__ultoa_invert>
 712:	d8 2e       	mov	r13, r24
 714:	d4 18       	sub	r13, r4
 716:	01 2f       	mov	r16, r17
 718:	0f 77       	andi	r16, 0x7F	; 127
 71a:	06 ff       	sbrs	r16, 6
 71c:	09 c0       	rjmp	.+18     	; 0x730 <vfprintf+0x2ec>
 71e:	0e 7f       	andi	r16, 0xFE	; 254
 720:	df 14       	cp	r13, r15
 722:	30 f4       	brcc	.+12     	; 0x730 <vfprintf+0x2ec>
 724:	04 ff       	sbrs	r16, 4
 726:	06 c0       	rjmp	.+12     	; 0x734 <vfprintf+0x2f0>
 728:	02 fd       	sbrc	r16, 2
 72a:	04 c0       	rjmp	.+8      	; 0x734 <vfprintf+0x2f0>
 72c:	0f 7e       	andi	r16, 0xEF	; 239
 72e:	02 c0       	rjmp	.+4      	; 0x734 <vfprintf+0x2f0>
 730:	1d 2d       	mov	r17, r13
 732:	01 c0       	rjmp	.+2      	; 0x736 <vfprintf+0x2f2>
 734:	1f 2d       	mov	r17, r15
 736:	80 2f       	mov	r24, r16
 738:	90 e0       	ldi	r25, 0x00	; 0
 73a:	04 ff       	sbrs	r16, 4
 73c:	0c c0       	rjmp	.+24     	; 0x756 <vfprintf+0x312>
 73e:	fe 01       	movw	r30, r28
 740:	ed 0d       	add	r30, r13
 742:	f1 1d       	adc	r31, r1
 744:	20 81       	ld	r18, Z
 746:	20 33       	cpi	r18, 0x30	; 48
 748:	11 f4       	brne	.+4      	; 0x74e <vfprintf+0x30a>
 74a:	09 7e       	andi	r16, 0xE9	; 233
 74c:	09 c0       	rjmp	.+18     	; 0x760 <vfprintf+0x31c>
 74e:	02 ff       	sbrs	r16, 2
 750:	06 c0       	rjmp	.+12     	; 0x75e <vfprintf+0x31a>
 752:	1e 5f       	subi	r17, 0xFE	; 254
 754:	05 c0       	rjmp	.+10     	; 0x760 <vfprintf+0x31c>
 756:	86 78       	andi	r24, 0x86	; 134
 758:	90 70       	andi	r25, 0x00	; 0
 75a:	00 97       	sbiw	r24, 0x00	; 0
 75c:	09 f0       	breq	.+2      	; 0x760 <vfprintf+0x31c>
 75e:	1f 5f       	subi	r17, 0xFF	; 255
 760:	80 2e       	mov	r8, r16
 762:	99 24       	eor	r9, r9
 764:	03 fd       	sbrc	r16, 3
 766:	12 c0       	rjmp	.+36     	; 0x78c <vfprintf+0x348>
 768:	00 ff       	sbrs	r16, 0
 76a:	0d c0       	rjmp	.+26     	; 0x786 <vfprintf+0x342>
 76c:	fd 2c       	mov	r15, r13
 76e:	1e 15       	cp	r17, r14
 770:	50 f4       	brcc	.+20     	; 0x786 <vfprintf+0x342>
 772:	fe 0c       	add	r15, r14
 774:	f1 1a       	sub	r15, r17
 776:	1e 2d       	mov	r17, r14
 778:	06 c0       	rjmp	.+12     	; 0x786 <vfprintf+0x342>
 77a:	80 e2       	ldi	r24, 0x20	; 32
 77c:	90 e0       	ldi	r25, 0x00	; 0
 77e:	b3 01       	movw	r22, r6
 780:	0e 94 3f 04 	call	0x87e	; 0x87e <fputc>
 784:	1f 5f       	subi	r17, 0xFF	; 255
 786:	1e 15       	cp	r17, r14
 788:	c0 f3       	brcs	.-16     	; 0x77a <vfprintf+0x336>
 78a:	04 c0       	rjmp	.+8      	; 0x794 <vfprintf+0x350>
 78c:	1e 15       	cp	r17, r14
 78e:	10 f4       	brcc	.+4      	; 0x794 <vfprintf+0x350>
 790:	e1 1a       	sub	r14, r17
 792:	01 c0       	rjmp	.+2      	; 0x796 <vfprintf+0x352>
 794:	ee 24       	eor	r14, r14
 796:	84 fe       	sbrs	r8, 4
 798:	0f c0       	rjmp	.+30     	; 0x7b8 <vfprintf+0x374>
 79a:	80 e3       	ldi	r24, 0x30	; 48
 79c:	90 e0       	ldi	r25, 0x00	; 0
 79e:	b3 01       	movw	r22, r6
 7a0:	0e 94 3f 04 	call	0x87e	; 0x87e <fputc>
 7a4:	82 fe       	sbrs	r8, 2
 7a6:	1f c0       	rjmp	.+62     	; 0x7e6 <vfprintf+0x3a2>
 7a8:	81 fe       	sbrs	r8, 1
 7aa:	03 c0       	rjmp	.+6      	; 0x7b2 <vfprintf+0x36e>
 7ac:	88 e5       	ldi	r24, 0x58	; 88
 7ae:	90 e0       	ldi	r25, 0x00	; 0
 7b0:	10 c0       	rjmp	.+32     	; 0x7d2 <vfprintf+0x38e>
 7b2:	88 e7       	ldi	r24, 0x78	; 120
 7b4:	90 e0       	ldi	r25, 0x00	; 0
 7b6:	0d c0       	rjmp	.+26     	; 0x7d2 <vfprintf+0x38e>
 7b8:	c4 01       	movw	r24, r8
 7ba:	86 78       	andi	r24, 0x86	; 134
 7bc:	90 70       	andi	r25, 0x00	; 0
 7be:	00 97       	sbiw	r24, 0x00	; 0
 7c0:	91 f0       	breq	.+36     	; 0x7e6 <vfprintf+0x3a2>
 7c2:	81 fc       	sbrc	r8, 1
 7c4:	02 c0       	rjmp	.+4      	; 0x7ca <vfprintf+0x386>
 7c6:	80 e2       	ldi	r24, 0x20	; 32
 7c8:	01 c0       	rjmp	.+2      	; 0x7cc <vfprintf+0x388>
 7ca:	8b e2       	ldi	r24, 0x2B	; 43
 7cc:	07 fd       	sbrc	r16, 7
 7ce:	8d e2       	ldi	r24, 0x2D	; 45
 7d0:	90 e0       	ldi	r25, 0x00	; 0
 7d2:	b3 01       	movw	r22, r6
 7d4:	0e 94 3f 04 	call	0x87e	; 0x87e <fputc>
 7d8:	06 c0       	rjmp	.+12     	; 0x7e6 <vfprintf+0x3a2>
 7da:	80 e3       	ldi	r24, 0x30	; 48
 7dc:	90 e0       	ldi	r25, 0x00	; 0
 7de:	b3 01       	movw	r22, r6
 7e0:	0e 94 3f 04 	call	0x87e	; 0x87e <fputc>
 7e4:	fa 94       	dec	r15
 7e6:	df 14       	cp	r13, r15
 7e8:	c0 f3       	brcs	.-16     	; 0x7da <vfprintf+0x396>
 7ea:	da 94       	dec	r13
 7ec:	f2 01       	movw	r30, r4
 7ee:	ed 0d       	add	r30, r13
 7f0:	f1 1d       	adc	r31, r1
 7f2:	80 81       	ld	r24, Z
 7f4:	90 e0       	ldi	r25, 0x00	; 0
 7f6:	b3 01       	movw	r22, r6
 7f8:	0e 94 3f 04 	call	0x87e	; 0x87e <fputc>
 7fc:	dd 20       	and	r13, r13
 7fe:	a9 f7       	brne	.-22     	; 0x7ea <vfprintf+0x3a6>
 800:	06 c0       	rjmp	.+12     	; 0x80e <vfprintf+0x3ca>
 802:	80 e2       	ldi	r24, 0x20	; 32
 804:	90 e0       	ldi	r25, 0x00	; 0
 806:	b3 01       	movw	r22, r6
 808:	0e 94 3f 04 	call	0x87e	; 0x87e <fputc>
 80c:	ea 94       	dec	r14
 80e:	ee 20       	and	r14, r14
 810:	c1 f7       	brne	.-16     	; 0x802 <vfprintf+0x3be>
 812:	40 ce       	rjmp	.-896    	; 0x494 <vfprintf+0x50>
 814:	f3 01       	movw	r30, r6
 816:	86 81       	ldd	r24, Z+6	; 0x06
 818:	97 81       	ldd	r25, Z+7	; 0x07
 81a:	02 c0       	rjmp	.+4      	; 0x820 <vfprintf+0x3dc>
 81c:	8f ef       	ldi	r24, 0xFF	; 255
 81e:	9f ef       	ldi	r25, 0xFF	; 255
 820:	2d 96       	adiw	r28, 0x0d	; 13
 822:	0f b6       	in	r0, 0x3f	; 63
 824:	f8 94       	cli
 826:	de bf       	out	0x3e, r29	; 62
 828:	0f be       	out	0x3f, r0	; 63
 82a:	cd bf       	out	0x3d, r28	; 61
 82c:	df 91       	pop	r29
 82e:	cf 91       	pop	r28
 830:	1f 91       	pop	r17
 832:	0f 91       	pop	r16
 834:	ff 90       	pop	r15
 836:	ef 90       	pop	r14
 838:	df 90       	pop	r13
 83a:	cf 90       	pop	r12
 83c:	bf 90       	pop	r11
 83e:	af 90       	pop	r10
 840:	9f 90       	pop	r9
 842:	8f 90       	pop	r8
 844:	7f 90       	pop	r7
 846:	6f 90       	pop	r6
 848:	5f 90       	pop	r5
 84a:	4f 90       	pop	r4
 84c:	3f 90       	pop	r3
 84e:	2f 90       	pop	r2
 850:	08 95       	ret

00000852 <strnlen_P>:
 852:	fc 01       	movw	r30, r24
 854:	05 90       	lpm	r0, Z+
 856:	61 50       	subi	r22, 0x01	; 1
 858:	70 40       	sbci	r23, 0x00	; 0
 85a:	01 10       	cpse	r0, r1
 85c:	d8 f7       	brcc	.-10     	; 0x854 <strnlen_P+0x2>
 85e:	80 95       	com	r24
 860:	90 95       	com	r25
 862:	8e 0f       	add	r24, r30
 864:	9f 1f       	adc	r25, r31
 866:	08 95       	ret

00000868 <strnlen>:
 868:	fc 01       	movw	r30, r24
 86a:	61 50       	subi	r22, 0x01	; 1
 86c:	70 40       	sbci	r23, 0x00	; 0
 86e:	01 90       	ld	r0, Z+
 870:	01 10       	cpse	r0, r1
 872:	d8 f7       	brcc	.-10     	; 0x86a <strnlen+0x2>
 874:	80 95       	com	r24
 876:	90 95       	com	r25
 878:	8e 0f       	add	r24, r30
 87a:	9f 1f       	adc	r25, r31
 87c:	08 95       	ret

0000087e <fputc>:
 87e:	0f 93       	push	r16
 880:	1f 93       	push	r17
 882:	cf 93       	push	r28
 884:	df 93       	push	r29
 886:	8c 01       	movw	r16, r24
 888:	eb 01       	movw	r28, r22
 88a:	8b 81       	ldd	r24, Y+3	; 0x03
 88c:	81 ff       	sbrs	r24, 1
 88e:	1b c0       	rjmp	.+54     	; 0x8c6 <fputc+0x48>
 890:	82 ff       	sbrs	r24, 2
 892:	0d c0       	rjmp	.+26     	; 0x8ae <fputc+0x30>
 894:	2e 81       	ldd	r18, Y+6	; 0x06
 896:	3f 81       	ldd	r19, Y+7	; 0x07
 898:	8c 81       	ldd	r24, Y+4	; 0x04
 89a:	9d 81       	ldd	r25, Y+5	; 0x05
 89c:	28 17       	cp	r18, r24
 89e:	39 07       	cpc	r19, r25
 8a0:	64 f4       	brge	.+24     	; 0x8ba <fputc+0x3c>
 8a2:	e8 81       	ld	r30, Y
 8a4:	f9 81       	ldd	r31, Y+1	; 0x01
 8a6:	01 93       	st	Z+, r16
 8a8:	f9 83       	std	Y+1, r31	; 0x01
 8aa:	e8 83       	st	Y, r30
 8ac:	06 c0       	rjmp	.+12     	; 0x8ba <fputc+0x3c>
 8ae:	e8 85       	ldd	r30, Y+8	; 0x08
 8b0:	f9 85       	ldd	r31, Y+9	; 0x09
 8b2:	80 2f       	mov	r24, r16
 8b4:	19 95       	eicall
 8b6:	00 97       	sbiw	r24, 0x00	; 0
 8b8:	31 f4       	brne	.+12     	; 0x8c6 <fputc+0x48>
 8ba:	8e 81       	ldd	r24, Y+6	; 0x06
 8bc:	9f 81       	ldd	r25, Y+7	; 0x07
 8be:	01 96       	adiw	r24, 0x01	; 1
 8c0:	9f 83       	std	Y+7, r25	; 0x07
 8c2:	8e 83       	std	Y+6, r24	; 0x06
 8c4:	02 c0       	rjmp	.+4      	; 0x8ca <fputc+0x4c>
 8c6:	0f ef       	ldi	r16, 0xFF	; 255
 8c8:	1f ef       	ldi	r17, 0xFF	; 255
 8ca:	c8 01       	movw	r24, r16
 8cc:	df 91       	pop	r29
 8ce:	cf 91       	pop	r28
 8d0:	1f 91       	pop	r17
 8d2:	0f 91       	pop	r16
 8d4:	08 95       	ret

000008d6 <__ultoa_invert>:
 8d6:	fa 01       	movw	r30, r20
 8d8:	aa 27       	eor	r26, r26
 8da:	28 30       	cpi	r18, 0x08	; 8
 8dc:	51 f1       	breq	.+84     	; 0x932 <__ultoa_invert+0x5c>
 8de:	20 31       	cpi	r18, 0x10	; 16
 8e0:	81 f1       	breq	.+96     	; 0x942 <__ultoa_invert+0x6c>
 8e2:	e8 94       	clt
 8e4:	6f 93       	push	r22
 8e6:	6e 7f       	andi	r22, 0xFE	; 254
 8e8:	6e 5f       	subi	r22, 0xFE	; 254
 8ea:	7f 4f       	sbci	r23, 0xFF	; 255
 8ec:	8f 4f       	sbci	r24, 0xFF	; 255
 8ee:	9f 4f       	sbci	r25, 0xFF	; 255
 8f0:	af 4f       	sbci	r26, 0xFF	; 255
 8f2:	b1 e0       	ldi	r27, 0x01	; 1
 8f4:	3e d0       	rcall	.+124    	; 0x972 <__ultoa_invert+0x9c>
 8f6:	b4 e0       	ldi	r27, 0x04	; 4
 8f8:	3c d0       	rcall	.+120    	; 0x972 <__ultoa_invert+0x9c>
 8fa:	67 0f       	add	r22, r23
 8fc:	78 1f       	adc	r23, r24
 8fe:	89 1f       	adc	r24, r25
 900:	9a 1f       	adc	r25, r26
 902:	a1 1d       	adc	r26, r1
 904:	68 0f       	add	r22, r24
 906:	79 1f       	adc	r23, r25
 908:	8a 1f       	adc	r24, r26
 90a:	91 1d       	adc	r25, r1
 90c:	a1 1d       	adc	r26, r1
 90e:	6a 0f       	add	r22, r26
 910:	71 1d       	adc	r23, r1
 912:	81 1d       	adc	r24, r1
 914:	91 1d       	adc	r25, r1
 916:	a1 1d       	adc	r26, r1
 918:	20 d0       	rcall	.+64     	; 0x95a <__ultoa_invert+0x84>
 91a:	09 f4       	brne	.+2      	; 0x91e <__ultoa_invert+0x48>
 91c:	68 94       	set
 91e:	3f 91       	pop	r19
 920:	2a e0       	ldi	r18, 0x0A	; 10
 922:	26 9f       	mul	r18, r22
 924:	11 24       	eor	r1, r1
 926:	30 19       	sub	r19, r0
 928:	30 5d       	subi	r19, 0xD0	; 208
 92a:	31 93       	st	Z+, r19
 92c:	de f6       	brtc	.-74     	; 0x8e4 <__ultoa_invert+0xe>
 92e:	cf 01       	movw	r24, r30
 930:	08 95       	ret
 932:	46 2f       	mov	r20, r22
 934:	47 70       	andi	r20, 0x07	; 7
 936:	40 5d       	subi	r20, 0xD0	; 208
 938:	41 93       	st	Z+, r20
 93a:	b3 e0       	ldi	r27, 0x03	; 3
 93c:	0f d0       	rcall	.+30     	; 0x95c <__ultoa_invert+0x86>
 93e:	c9 f7       	brne	.-14     	; 0x932 <__ultoa_invert+0x5c>
 940:	f6 cf       	rjmp	.-20     	; 0x92e <__ultoa_invert+0x58>
 942:	46 2f       	mov	r20, r22
 944:	4f 70       	andi	r20, 0x0F	; 15
 946:	40 5d       	subi	r20, 0xD0	; 208
 948:	4a 33       	cpi	r20, 0x3A	; 58
 94a:	18 f0       	brcs	.+6      	; 0x952 <__ultoa_invert+0x7c>
 94c:	49 5d       	subi	r20, 0xD9	; 217
 94e:	31 fd       	sbrc	r19, 1
 950:	40 52       	subi	r20, 0x20	; 32
 952:	41 93       	st	Z+, r20
 954:	02 d0       	rcall	.+4      	; 0x95a <__ultoa_invert+0x84>
 956:	a9 f7       	brne	.-22     	; 0x942 <__ultoa_invert+0x6c>
 958:	ea cf       	rjmp	.-44     	; 0x92e <__ultoa_invert+0x58>
 95a:	b4 e0       	ldi	r27, 0x04	; 4
 95c:	a6 95       	lsr	r26
 95e:	97 95       	ror	r25
 960:	87 95       	ror	r24
 962:	77 95       	ror	r23
 964:	67 95       	ror	r22
 966:	ba 95       	dec	r27
 968:	c9 f7       	brne	.-14     	; 0x95c <__ultoa_invert+0x86>
 96a:	00 97       	sbiw	r24, 0x00	; 0
 96c:	61 05       	cpc	r22, r1
 96e:	71 05       	cpc	r23, r1
 970:	08 95       	ret
 972:	9b 01       	movw	r18, r22
 974:	ac 01       	movw	r20, r24
 976:	0a 2e       	mov	r0, r26
 978:	06 94       	lsr	r0
 97a:	57 95       	ror	r21
 97c:	47 95       	ror	r20
 97e:	37 95       	ror	r19
 980:	27 95       	ror	r18
 982:	ba 95       	dec	r27
 984:	c9 f7       	brne	.-14     	; 0x978 <__ultoa_invert+0xa2>
 986:	62 0f       	add	r22, r18
 988:	73 1f       	adc	r23, r19
 98a:	84 1f       	adc	r24, r20
 98c:	95 1f       	adc	r25, r21
 98e:	a0 1d       	adc	r26, r0
 990:	08 95       	ret

00000992 <_exit>:
 992:	f8 94       	cli

00000994 <__stop_program>:
 994:	ff cf       	rjmp	.-2      	; 0x994 <__stop_program>
